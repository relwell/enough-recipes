---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f../docker-compose.yml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: app
    app: app
  name: app
  namespace: enough-recipes
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
      app: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f../docker-compose.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: app
        app: app
    spec:
      imagePullSecrets:
        - name: dr
      containers:
        - args:
            - ./runserver.sh
          env:
            - name: ENV
              value: "prod"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: ersecrets
                  key: database_url
                  optional: false
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: ersecrets
                  key: aws_secret_access_key
                  optional: false
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ersecrets
                  key: aws_access_key_id
                  optional: false
          image: relwell/enough-recipes:latest
          imagePullPolicy: Always
          name: app
          volumeMounts:
            - name: secrets
              mountPath: /etc/secrets
          ports:
            - containerPort: 80
              name: "http"
          resources: {}
          tty: true
          workingDir: /usr/src/app
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 3
      restartPolicy: Always
      volumes:
        - name: secrets
          secret:
            secretName: ersecrets
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: app-svc
  namespace: enough-recipes
  labels:
    app: app-svc
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: "http"
